
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'J_AND J_OR J_N_EQUALS J_EQUALS J_IMPLIES HAS HAS_NOT ATTR_CLASS ATTR_NAME ATTR_RANK ATTR_DESCRIPTION ATTR_VALUE LESSER GREATER EQ_LESSER EQ_GREATER EQUAL N_EQUAL STARTS_WITH ENDS_WITH CONTAINS NUMBER CLASS RANK STRING LPAREN RPARENstatement : expression join statementstatement : LPAREN statement RPARENstatement : expressionexpression : exist_comp attributeexpression : ATTR_CLASS equal_comp CLASSexpression : ATTR_RANK num_comp RANKexpression : num_attribute num_comp NUMBERexpression : str_attribute str_comp STRINGattribute : num_attribute\n                 | str_attribute\n                 | enum_attributeenum_attribute : ATTR_CLASSenum_attribute : ATTR_RANKnum_attribute : ATTR_VALUEstr_attribute : ATTR_NAMEstr_attribute : ATTR_DESCRIPTIONequal_comp : EQUALequal_comp : N_EQUALnum_comp : equal_compnum_comp : LESSERnum_comp : GREATERnum_comp : EQ_GREATERnum_comp : EQ_LESSERstr_comp : STARTS_WITHstr_comp : ENDS_WITHstr_comp : CONTAINSexist_comp : HASexist_comp : HAS_NOTjoin : J_ANDjoin : J_ORjoin : J_N_EQUALSjoin : J_IMPLIESjoin : J_EQUALS'
    
_lr_action_items = {'ATTR_NAME':([0,9,10,11,12,35,36,37,38,39,40,],[1,1,1,-28,-27,-32,1,-33,-30,-29,-31,]),'EQUAL':([2,3,6,7,],[16,-14,16,16,]),'HAS_NOT':([0,10,35,36,37,38,39,40,],[11,11,-32,11,-33,-30,-29,-31,]),'EQ_LESSER':([3,6,7,],[-14,20,20,]),'J_N_EQUALS':([1,3,5,13,28,29,30,31,32,33,41,42,43,44,],[-15,-14,-16,40,-9,-13,-4,-10,-12,-11,-5,-7,-6,-8,]),'J_AND':([1,3,5,13,28,29,30,31,32,33,41,42,43,44,],[-15,-14,-16,39,-9,-13,-4,-10,-12,-11,-5,-7,-6,-8,]),'EQ_GREATER':([3,6,7,],[-14,17,17,]),'RPAREN':([1,3,5,13,28,29,30,31,32,33,34,41,42,43,44,45,46,],[-15,-14,-16,-3,-9,-13,-4,-10,-12,-11,45,-5,-7,-6,-8,-2,-1,]),'ATTR_CLASS':([0,9,10,11,12,35,36,37,38,39,40,],[2,32,2,-28,-27,-32,2,-33,-30,-29,-31,]),'ATTR_VALUE':([0,9,10,11,12,35,36,37,38,39,40,],[3,3,3,-28,-27,-32,3,-33,-30,-29,-31,]),'ATTR_DESCRIPTION':([0,9,10,11,12,35,36,37,38,39,40,],[5,5,5,-28,-27,-32,5,-33,-30,-29,-31,]),'STARTS_WITH':([1,5,8,],[-15,-16,26,]),'$end':([1,3,4,5,13,28,29,30,31,32,33,41,42,43,44,45,46,],[-15,-14,0,-16,-3,-9,-13,-4,-10,-12,-11,-5,-7,-6,-8,-2,-1,]),'N_EQUAL':([2,3,6,7,],[14,-14,14,14,]),'J_EQUALS':([1,3,5,13,28,29,30,31,32,33,41,42,43,44,],[-15,-14,-16,37,-9,-13,-4,-10,-12,-11,-5,-7,-6,-8,]),'STRING':([24,25,26,27,],[-26,-25,-24,44,]),'ATTR_RANK':([0,9,10,11,12,35,36,37,38,39,40,],[7,29,7,-28,-27,-32,7,-33,-30,-29,-31,]),'NUMBER':([14,16,17,18,19,20,21,22,],[-18,-17,-22,-19,-21,-23,-20,42,]),'RANK':([14,16,17,18,19,20,21,23,],[-18,-17,-22,-19,-21,-23,-20,43,]),'LPAREN':([0,10,35,36,37,38,39,40,],[10,10,-32,10,-33,-30,-29,-31,]),'J_IMPLIES':([1,3,5,13,28,29,30,31,32,33,41,42,43,44,],[-15,-14,-16,35,-9,-13,-4,-10,-12,-11,-5,-7,-6,-8,]),'HAS':([0,10,35,36,37,38,39,40,],[12,12,-32,12,-33,-30,-29,-31,]),'ENDS_WITH':([1,5,8,],[-15,-16,25,]),'GREATER':([3,6,7,],[-14,19,19,]),'CONTAINS':([1,5,8,],[-15,-16,24,]),'CLASS':([14,15,16,],[-18,41,-17,]),'LESSER':([3,6,7,],[-14,21,21,]),'J_OR':([1,3,5,13,28,29,30,31,32,33,41,42,43,44,],[-15,-14,-16,38,-9,-13,-4,-10,-12,-11,-5,-7,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'num_attribute':([0,9,10,36,],[6,28,6,6,]),'equal_comp':([2,6,7,],[15,18,18,]),'str_comp':([8,],[27,]),'attribute':([9,],[30,]),'str_attribute':([0,9,10,36,],[8,31,8,8,]),'exist_comp':([0,10,36,],[9,9,9,]),'statement':([0,10,36,],[4,34,46,]),'enum_attribute':([9,],[33,]),'join':([13,],[36,]),'expression':([0,10,36,],[13,13,13,]),'num_comp':([6,7,],[22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression join statement','statement',3,'p_statement','Refila.py',254),
  ('statement -> LPAREN statement RPAREN','statement',3,'p_statement_group','Refila.py',258),
  ('statement -> expression','statement',1,'p_statement_expr','Refila.py',262),
  ('expression -> exist_comp attribute','expression',2,'p_expression_exists','Refila.py',266),
  ('expression -> ATTR_CLASS equal_comp CLASS','expression',3,'p_expression_attrclass_class','Refila.py',270),
  ('expression -> ATTR_RANK num_comp RANK','expression',3,'p_expression_attrrank_rank','Refila.py',274),
  ('expression -> num_attribute num_comp NUMBER','expression',3,'p_expression_num_attr','Refila.py',278),
  ('expression -> str_attribute str_comp STRING','expression',3,'p_expression_str_attr','Refila.py',282),
  ('attribute -> num_attribute','attribute',1,'p_attribute','Refila.py',287),
  ('attribute -> str_attribute','attribute',1,'p_attribute','Refila.py',288),
  ('attribute -> enum_attribute','attribute',1,'p_attribute','Refila.py',289),
  ('enum_attribute -> ATTR_CLASS','enum_attribute',1,'p_attribute_class','Refila.py',294),
  ('enum_attribute -> ATTR_RANK','enum_attribute',1,'p_attribute_rank','Refila.py',298),
  ('num_attribute -> ATTR_VALUE','num_attribute',1,'p_attribute_value','Refila.py',303),
  ('str_attribute -> ATTR_NAME','str_attribute',1,'p_attribute_name','Refila.py',308),
  ('str_attribute -> ATTR_DESCRIPTION','str_attribute',1,'p_attribute_des','Refila.py',312),
  ('equal_comp -> EQUAL','equal_comp',1,'p_equal_comp_equal','Refila.py',317),
  ('equal_comp -> N_EQUAL','equal_comp',1,'p_equal_comp_n_equal','Refila.py',321),
  ('num_comp -> equal_comp','num_comp',1,'p_comp_equals','Refila.py',326),
  ('num_comp -> LESSER','num_comp',1,'p_comp_lesser','Refila.py',330),
  ('num_comp -> GREATER','num_comp',1,'p_comp_greater','Refila.py',334),
  ('num_comp -> EQ_GREATER','num_comp',1,'p_comp_eq_greater','Refila.py',338),
  ('num_comp -> EQ_LESSER','num_comp',1,'p_comp_eq_lesser','Refila.py',342),
  ('str_comp -> STARTS_WITH','str_comp',1,'p_comp_starts_with','Refila.py',347),
  ('str_comp -> ENDS_WITH','str_comp',1,'p_comp_ends_with','Refila.py',351),
  ('str_comp -> CONTAINS','str_comp',1,'p_comp_contains','Refila.py',355),
  ('exist_comp -> HAS','exist_comp',1,'p_exists_has','Refila.py',360),
  ('exist_comp -> HAS_NOT','exist_comp',1,'p_exists_has_not','Refila.py',364),
  ('join -> J_AND','join',1,'p_join_and','Refila.py',369),
  ('join -> J_OR','join',1,'p_join_or','Refila.py',373),
  ('join -> J_N_EQUALS','join',1,'p_join_xor','Refila.py',377),
  ('join -> J_IMPLIES','join',1,'p_join_implies','Refila.py',381),
  ('join -> J_EQUALS','join',1,'p_join_equals','Refila.py',385),
]
